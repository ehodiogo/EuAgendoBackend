services:
  web:
    build: .
    container_name: django_app
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn backend.wsgi:application --bind 0.0.0.0:${DJANGO_PORT} --workers 3"
#    command: >
#      sh -c "python manage.py runserver 0.0.0.0:${DJANGO_PORT}"
    volumes:
      - .:/app
      - static_volume:/app/backend/staticfiles
      - ./BACKUPS:/app/../BACKUPS
    ports:
      - "${DJANGO_PORT}:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - vemagendar_network
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis_broker
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - vemagendar_network
    restart: always

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_PORT: ${PGPORT}
      POSTGRES_HOST: ${PGHOST}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - vemagendar_network
    restart: always

  celery:
    build: .
    container_name: celery_worker
    command: celery -A backend worker -l info
    volumes:
      - .:/app
      - ./BACKUPS:/app/../BACKUPS
    env_file:
      - .env
    depends_on:
      - redis
      - web
      - db
    networks:
      - vemagendar_network
    restart: always

  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A backend beat -l info
    volumes:
      - .:/app
      - ./BACKUPS:/app/../BACKUPS
    env_file:
      - .env
    depends_on:
      - redis
      - web
      - db
    networks:
      - vemagendar_network
    restart: always

  flower:
    build: .
    container_name: flower
    command: celery -A backend flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - db
    networks:
      - vemagendar_network
    restart: always

volumes:
  static_volume:
  postgres_data:

networks:
  vemagendar_network:
    external: true
